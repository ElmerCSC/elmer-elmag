! Open straight wire
! This model uses the Circuit Builder to set up an open stranded 3D coil
! Transient Case
! Author: Jonathan Velasco
! Original date: October 2021
! jonathan.velasco@csc.fi
!------------------------------------------------------

Header
  CHECK KEYWORDS Warn
  Mesh DB "." "wire"
  Results Directory "res"
End

!---------------------------------------------------------
!Parameters
!---------------------------------------------------------
$ freq = 1e5
$ omega = 2*pi*freq
$ phase = 0
$ stepsPerPeriod = 10
$ periods = 1
$ nsteps = periods*stepsPerPeriod
$ stepsize=(periods/freq)/nsteps

!---------------------------------------------------------
!Include Directories (Parameters and Circuit Sources)
!Toggle between current and voltage sources by (un)commenting
!---------------------------------------------------------
Include "open_wire_current.definition"
!Include "open_wire_voltage.definition"

!---------------------------------------------------------
!SIMULATION CONFIGURATION 
!---------------------------------------------------------

Simulation
  Max Output Level = 7
  Coordinate System = "Cartesian"
  Simulation Type = "Transient"
  !-----------Transient Simulation Parameters ------------
  TimeStepping Method = BDF
  BDF Order = 1
  Timestep Sizes(1) = Real $stepsize
  TimeStep Intervals(1) = $nsteps
  !-------------------------------
  Output Intervals(1) = 1
  Steady State Max Iterations = 1
  Use Mesh Names = True
End
!---------------------------------------------------------

Constants
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
End

Body 1  !---- Air
   Name = Air
   Equation = 1
   Material = 2
   Initial Condition = 1
End
Body 2  !---- Wire
   Name = Wire
   Equation = 2
   Material = 1
   Initial Condition = 1
   Body Force = 1
   Alpha reference (3) = Real 1 0 0
   Beta reference (3) = Real 0 1 0
End

Initial Condition 1
   A {e} = Real 0
   A  = Real 0
End

!---------------------------------------------------------
! Material Properties 
!---------------------------------------------------------

Material 1
  Name = "Copper"
  Electric Conductivity = 58e6
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
End

Material 2
  Name = "Air"
  Electric Conductivity = 0.0
  Relative Permittivity = 1.0
  Relative Permeability = 1.0
End

!---------------------------------------------------------
! Boundary conditions
!---------------------------------------------------------

Boundary Condition 1  
    Name = "Infinity_Magnetic_Insulation"
    A {e} = Real 0
End
Boundary Condition 2  !---- ground
   Name = "Terminal_2"
   Coil End = Logical True
   W = Real 0
   A {e} = Real 0
End
Boundary Condition 3  !---- active terminal (source)
   Name = "Terminal_1"
   Coil Start = Logical True
   W = Real 1
   A {e} = Real 0
End

!---------------------------------------------------------
! Solver Configuration
!---------------------------------------------------------
Equation 1
  Name = "MagnetoDynamics for coil"
  Active Solvers(5) = 1 2 3 4 5
End
Equation 2
  Name = "MagnetoDynamics for air"
  Active Solvers(2) = 3 4
End


Solver 1  !---- CoilSolver, CoilSolver
  Exec Solver = Before Timestep
  Equation = "CoilSolver"
  Procedure = "CoilSolver" "CoilSolver"
  
  Steady State Convergence Tolerance = 1e-06 
  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU1
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1e-6
  Linear System Iterative Method = BiCGStab
  Linear System Residual Output = 1
  Normalize Coil Current = Logical True
  Fix Input Current Density = Logical True
  Nonlinear System Consistent Norm = Logical True
  Coil Closed = Logical False
  Narrow Interface = Logical True
  Save Coil Set = Logical True
  Save Coil Index = Logical True
  Calculate Elemental Fields = Logical True
  Exported Variable 1 = W
  
  !Coil Normal(3) = Real 0. 0. 1.
End
Solver 2  !---- CircuitsAndDynamics, CircuitsAndDynamics
   Exec Solver = Always
   Equation = Circuits
   Variable = X
   No Matrix = Logical True
   Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
End
Solver 3  !---- MagnetoDynamics, WhitneyAVSolver
   Exec Solver = Always
   Equation = "MGDynamics"
   Variable = "A"
   Procedure = "MagnetoDynamics" "WhitneyAVSolver"
   NonLinear System Relaxation Factor=1
   Export Lagrange Multiplier = Logical True
   Linear System Solver = Iterative
   Linear System Iterative Method = BicgstabL
   Linear System preconditioning = none
   Linear System Convergence Tolerance = 1.e-8
   Linear System Max Iterations = 3000
   Linear System Residual Output = 1000
   Linear System ILUT Tolerance=1e-8
   BicgstabL polynomial degree = 6
   Steady State Convergence Tolerance = 1e-08
End
Solver 4  !---- MagnetoAndDynamics, MagnetoDynamicsCalcFields
  Exec Solver = Always
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  
  Potential Variable = String "A"
  Steady State Convergence Tolerance = 1.0e-6
  
  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Iterative Method = CG
  Linear System Max Iterations = 5000
  Linear System Convergence Tolerance = 1.0e-6
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
  Discontinuous Bodies = Logical True
  
  Calculate Elemental Fields = Logical True
End
Solver 5  !---- CircuitsAndDynamics, CircuitsOutput
   Exec Solver = After timestep
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End
Solver 6  !---- ResultOuputSolve, ResultOuputSolver
   Exec Solver = After timestep
   Equation = "ResultOutput"
   Procedure = "ResultOutputSolve" "ResultOutputSolver"
   Vtu Format = Logical True
   Output Format = Gmsh
   Binary Output = Logical True
   Discontinuous Bodies = Logical True
   Output File Name = File "coil"
   Save Geometry Ids = Logical True 
End

Solver 7  !---- SaveData, SaveScalars (Write circuit variables to file)
   Equation = "SaveLine" 
   Procedure = "SaveData" "SaveLine"
   Filename = "f.dat"
   Polyline Coordinates(8,3) = 0.0 0.072 0.034 0.288 0.072 0.034 \
  	   0.0 0.144 0.034 0.288 0.144 0.034 \
	   0.0 0.072 0.019 0.288 0.072 0.019 \
	   0.0 0.072 0.0 0.288 0.072 0.0
   Polyline Divisions(4) = 100 100 100 100
End

