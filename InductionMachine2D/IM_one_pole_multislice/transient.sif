include transient_params.dat

Header
  Mesh DB "imms"
  Results Directory "results"
  Include Path "materials"
End

Simulation
  Max Output Level = 3
  Coordinate System = Cartesian 2D

  Circuit Model Depth = Real $ l/ns

!  Steady State Min Iterations = 2
!  Steady State Max Iterations = 4
  Simulation Type = Transient  
  Timestepping Method = BDF
  BDF Order = 2
  
  Output Intervals = 1
  Timestep Sizes = $ 1/f/15
  Timestep Intervals = $ 25*15

!  Mesh Levels = 2
!  Mesh Keep = 1
  Use Mesh Names = Logical True
End


!###############################################################################
!##################################### Materials ###############################
!###############################################################################

! Air
Material 1
  Relative Permeability = 1
  Electric Conductivity = 0 
End

! lamination steel
Material 2
  Name = "Iron"
  INCLUDE el_steel_M800_65A
  Electric Conductivity = 0 
End

! Aluminum
Material 3
  Relative Permeability = 1
!  Electric Conductivity = 36e6 ! [1/(Ohm*m)] cold rotor
  Electric Conductivity = 24e6 ! [1/(Ohm*m)] hot rotor
!  Electric Conductivity = 0
End

! Copper
Material 4
  Relative Permeability = 1
  Electric Conductivity = 48e6 
End

!###############################################################################
!#######################------ Body Force Section ----#######################
!###############################################################################


Body Force 1
  Name = "Circuit"

  ! U-phase voltage 400/sqrt(3) Vrms at 0 degrees
  U_u = Variable time
    Real MATC "400*sqrt(2)/sqrt(3)*sin(tx(0)*2*pi*f)"

  ! V-phase voltage 400/sqrt(3) Vrms at -120 degrees
  U_v = Variable time
    Real MATC "400*sqrt(2)/sqrt(3)*sin(tx(0)*2*pi*f-2*pi/3)"

  ! W-phase voltage 400/sqrt(3) Vrms at +120 degrees
  U_w = Variable time
    Real MATC "400*sqrt(2)/sqrt(3)*sin(tx(0)*2*pi*f+2*pi/3)"

End

Body Force 7
  Mesh Rotate 3 = Variable time, coordinate 3
    Real MATC "180/pi*f*(1-slip)*2*pi/pp*tx(0)+skew*tx(1)/l"
End


!###############################################################################
!##################################### Bodies ###############################
!###############################################################################

Body 1
  Name = Bar1
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 2
  Name = Bar2
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 3
  Name = Bar3
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 4
  Name = Bar4
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 5
  Name = Bar5
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 6
  Name = Bar6
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 7
  Name = Bar7
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 8
  Name = Bar8
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 9
  Name = Bar9
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End

Body 10
  Name = Bar10
  Equation = 1
  Material = 3
  Body Force = 7
  Torque Groups = Integer 1
End


Body 11
  Name = U_plus
  Equation = 1
  Material = 4
End

Body 12
  Name = W_minus
  Equation = 1
  Material = 4
End

Body 13
  Name = V_plus
  Equation = 1
  Material = 4
End

Body 14
  Name = StatorIron
  Equation = 1
  Material = 2
End

Body 15
  Name = StatorWedges
  Equation = 1
  Material = 1
End

Body 16
  Name = StatorAirgap
  Equation = 1
  Material = 1
End

Body 17
  Name = RotorIron
  Equation = 1
  Material = 2
  Body Force = 7
  Torque Groups = Integer 1
End

Body 18
  Name = RotorAirgap
  Equation = 1
  Material = 1
  Body Force = 7
  R Inner = Real 0.0620
  R Outer = Real 0.0625
End


!###############################################################################
!##################################### Components ###############################
!###############################################################################

include "cage/cage.definitions"

Component 11
  Name = String Uplus
  Body = Integer 11
  Coil Type = String Stranded
  Number of Turns = Real $ ns*Nph/2
  Resistance = Real $ Rs
End

Component 12
  Name = String Vplus
  Body = Integer 13
  Coil Type = String Stranded
  Number of Turns = Real $ ns*Nph/2
  Resistance = Real $ Rs
End

Component 13
  Name = String Wminus
  Body = Integer 12
  Coil Type = String Stranded
  Number of Turns = Real $ ns*Nph/2
  Resistance = Real $ Rs
End



!###############################################################################
!#######################------ Solver section -----#######################!
!###############################################################################

Equation 1 :: Active Solvers(3) = 2 3 4

! Rotation of the rotor at the beginning of each time step
Solver 1
  Exec Solver = Before timestep
  Equation = MeshDeform
  Procedure = "RigidMeshMapper" "RigidMeshMapper"
End

Solver 2
  Exec Solver = Always
  Equation = Circuits
  Variable = X
  Procedure = "CircuitsAndDynamics" "CircuitsAndDynamics"
  No Matrix = Logical True
End


Solver 3
  Exec Solver = Always
  Equation = MgDyn2D
  Variable = A

  Procedure = "MagnetoDynamics2D" "MagnetoDynamics2D"

!!!!!!!!!!!!!!!!!!!  These are for better convergence for parallel  
  Stabilize = False
  Partition Local Constraints = Logical True
  Nonlinear System Compute Change in Scaled System = Logical True
  Nonlinear System Convergence Measure = Residual
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  Nonlinear System Convergence Tolerance = 1e-5
  Nonlinear System Max Iterations = 20
  Nonlinear System Min Iterations = 2
  Nonlinear System Relaxation Factor = 1.0
  Nonlinear System Newton After Iterations = 7

  Export Lagrange Multiplier = Logical True

  Linear System Abort Not Converged = False
  Linear System Solver = Iterative

  Linear System Iterative Method = GCR! bicgstabl
  Linear System GCR Restart = 300
  Bicgstabl Polynomial Degree = 4

  Linear System Preconditioning = Ilu4
  Linear System Max Iterations = 1500
  Linear System Residual Output = Integer 40
  Linear System Convergence Tolerance = 1.0e-7 ! 2.0e-6

!  Linear System Symmetric = True
  Mortar BCs Additive = Logical True
End


Solver 4
  Exec Solver = Always
  Equation = CalcFields
  Potential Variable = "A"
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"

  ! GNF Torque calculation
  Calculate Nodal Forces = Logical True
  Calculate Magnetic Torque = Logical True


  Calculate Current Density = Logical True 
!  Calculate Electric Field = Logical True
!  Calculate Magnetic Field Strength = Logical True
  Calculate Magnetic Vector Potential = Logical True
 
  Linear System Solver = Direct
End

Solver 5
  Exec Solver = Always
  Equation = CircOutput
  Procedure = "CircuitsAndDynamics" "CircuitsOutput"
  Linear System Solver = Direct
End


Solver 6
  Exec Solver = after timestep
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Output File Name = case
  Output Directory = results
  Save Geometry Ids = Logical True
  Vtu Format = Logical True
  Binary Output = Logical True
  Single Precision = Logical True

!  Scalar Field 1 = "magnetic flux density e"
!  Scalar Field 2 = "current density e"
!  Scalar Field 3 = "a"
  
  ! better visualization of disconinuous fields (interfers with connectivity filter)
!  Discontinuous Bodies = Logical True  
End 

Solver 7
  Exec Solver = After timestep
  Equation = scalars
  Procedure = "SaveData" "SaveScalars"
  Filename = transient_results.dat
  Output Directory = results
End

!###############################################################################
!#######################------ Boundary section -----#######################!
!###############################################################################

Boundary Condition 1
  Name = OuterStator
  A = Real 0
End


Boundary Condition 2
  Name = StatorRight
  Mortar BC = Integer 3
  Mortar BC Static = Logical True
  Anti Radial Projector = Logical True
  Galerkin Projector = Logical True
End

Boundary Condition 3
  Name = StatorLeft
End

Boundary Condition 4
  Name = Sliding_Stator
  Mortar BC = Integer 8  
  Anti Rotational Projector = Logical True
  Galerkin Projector = Logical True
End

Boundary Condition 5
  Name = InnerRotor
  A = Real 0
End

Boundary Condition 6
  Name = RotorRight
  Mortar BC = Integer 7
  Mortar BC Static = Logical True
  Anti Radial Projector = Logical True
  Galerkin Projector = Logical True
End

Boundary Condition 7
  Name = RotorLeft
End

Boundary Condition 8
  Name = Sliding_Rotor
End

