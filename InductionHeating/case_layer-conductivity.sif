! Here we assume that the frequency is such high that the current
! density in the inductor only recides on the boundary as the
! skin depth is so small. In order to be able to set Neumann BCs for the end
! of the skin we need to create line BCs on the fly as intersection
! of two surface BCs. Note that the layer BCs activate the computation
! of surface currents. No volume currents are postprocessed due to
! the layer BCs. Unfortunately the convergence of the solution is not
! too good. This should however provide a basis for critical comparison
! between different methods. 
 
Header
  CHECK KEYWORDS "Warn"
  Mesh DB "." "mesh"
End

Simulation
  Max Output Level = 7
  Coordinate System = Cartesian
  Simulation Type = Steady
  Steady State Max Iterations = 1  ! one-directinal coupling
  Angular Frequency = 84823.00164692441
End

Constants
  Stefan Boltzmann = 5.6704e-08
End

Equation 1
  Name = "Eqn Main"
  Active Solvers(3) = 1 2 3    ! MGDynamics, MGDynamicsCalc, HeatSolver
End


! MGDynamics
Solver 1
  Equation = MGDynamics
  Variable = AV[AV re:1 AV im:1]
  Procedure = "MagnetoDynamics" "WhitneyAVHarmonicSolver"
  Linear System Solver = Iterative

  Linear System Preconditioning = ILU
  Linear System Residual Output = 20
  Linear System Max Iterations = 10000
  Linear System Iterative Method = BiCGStabl
  Linear System Convergence Tolerance = 1e-06
  Linear System Robust = True
  Linear System Abort Not Converged = False

  BicgStabl Polynomial Degree = 4
  Angular Frequency = 84823.00164692441
End

! MGDynamicsCalc
Solver 2
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Potential Variable = String "AV"
  Calculate Current Density = Logical True
  Calculate Electric Field = Logical True
  Calculate Magnetic Field Strength = Logical True

  Calculate Joule Heating = True
  Calculate Nodal Heating = True

  Steady State Convergence Tolerance = 1e-06

  Calculate Nodal Fields = False
  Calculate Elemental Fields = True

  Linear System Solver = Iterative
  Linear System Preconditioning = ILU0
  Linear System Residual Output = 0
  Linear System Max Iterations = 5000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 1e-08
  Angular Frequency = 84823.00164692441
End

! HeatSolver
Solver 3
  Equation = Heat Equation
  Procedure = "HeatSolve" "HeatSolver"
  Variable = Temperature

  Nonlinear System Convergence Tolerance = 1e-06
  Nonlinear System Max Iterations = 1000
  Nonlinear System Relaxation Factor = 0.7
  Steady State Convergence Tolerance = 1e-05

  Linear System Solver = Iterative
  Linear System Iterative Method = Idrs
  Linear System Max Iterations = 10000
  Linear System Preconditioning = ILU1
  Linear System Precondition Recompute = 1
  Linear System Convergence Tolerance = 1e-08
  Linear System Abort Not Converged = True
  Linear System Residual Output = 20
!  Smart Heater Control After Tolerance = 0.01
End

! ResultOutputSolver
Solver 4
  Exec Solver = after saving
  Equation = "ResultOutput"
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  Vtu Format = True
  Vtu Part collection = True

  Save Bulk Only = True
!Save Geometry Ids = True
  Output Directory = results
  Output File name = layer
End

Material 1
  Name = "copper"
  Density = 8960.0
  Electric Conductivity = 0.0
  Emissivity = 0.2
  Heat Capacity = 415.0
  Heat Conductivity = 390.0
  Relative Permeability = 1
  Relative Permittivity = 1
End

Material 2
  Name = "graphite-CZ3R6300"
  Density = 1730.0
  Electric Conductivity = 58800.0
  Emissivity = 0.7
  Heat Capacity = 1237.0
  Heat Conductivity = 65
  Relative Permeability = 1
  Relative Permittivity = 1
End

Material 3
  Name = "air"
  Density = 1.1885
  Electric Conductivity = 0.0
  Heat Capacity = 1006.4
  Heat Conductivity = 0.025873
  Relative Permeability = 1
  Relative Permittivity = 1
End


Body 1
  Name = "inductor"
  Target Bodies(1) = 2
  Equation = 1  ! eqn_main
  Material = 1  ! copper
End

Body 2
  Name = "cylinder"
  Target Bodies(1) = 1
  Equation = 1  ! eqn_main
  Material = 2  ! graphite-CZ3R6300
  Body Force = 1  ! joule_heat
End

Body 3
  Name = "surrounding"
  Target Bodies(1) = 3
  Equation = 1  ! eqn_main
  Material = 3  ! air
End


Boundary Condition 1
  Name = "bc_inductor"
  Target Boundaries(1) = 8
  Layer Electric Conductivity = Real 58.1e6
  Layer Relative Permeability = Real 1
  Temperature = 293.15
End

Boundary Condition 2
  Name = "bc_surrounding"
  Target Boundaries(1) = 5
  Temperature = 293.15
  AV re {e} = Real 0.0
  AV im {e} = Real 0.0
! It is a bad idea to set the scalar potential here since it would
! compete with the inductor ends as they share some nodes.
End

Boundary Condition 3
  Name = "bc_inductor_end_bottom"
  Target Boundaries(1) = 6
  AV re = 0.0
  AV im = 0.0
  AV re {e} = Real 0.0
  AV im {e} = Real 0.0
End

Boundary Condition 4
  Name = "bc_inductor_end_top"
  Target Boundaries(1) = 7
  AV re {e} = Real 0.0
  AV im {e} = Real 0.0
End


! This is the end of the "layer bc" when presenting the coil with the
! surface model. The entity for setting does not exist a priori and
! hence is created on-the-fly and the electric current is divided
! along the length of the line boundary with the "-distribute" flag. 
Boundary Condition 5
  Name = "bc_inductor_end_top_line"
  Intersection BC(2) = Integer 1 4 
  Electric Current Density = -distribute 100.0
End


Body Force 1
  Name = "heating"

! This will automatically use "Joule heating e" when available. 
  Joule Heat = Logical True
End


! Just for consistency
Solver 1 :: Reference Norm = 1.68606710E-01
Solver 3 :: Reference Norm = 6.68418818E+02

